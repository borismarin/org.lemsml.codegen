import "parameters.stg"
import "child.stg"
import "children.stg"
import "reference.stg"
import "subcomponents.stg"
import "imports.stg"
import "root_element.stg"


quali_name(type) ::= "<pkg_name()>.<type.extends>"
extension(type) ::= "extends <if(type.extends)><type.extends><else>Component<endif>"

pkg_name() ::= "org.<ml_name>.model"
pkg() ::= "package <pkg_name()>"


domo(lems, ml_name) ::= <<

//Test domain model generation from <lems.definedIn>
//---------------------------------------------------//
<lems.componentTypes:class_file(); separator="\n">
<lems:root_element(); separator="\n">
>>

class_file(type) ::= <<
<pkg()>;

<imports(type)>
<class(type)>
>>

getter_name(prop) ::= "get<prop; format=\"cap\">s"

class(type) ::= <<
@XmlType
public class <type.name> <type:extension()> {

<! see child.stg !>
<type.children:child_declaration(); separator = "\n"><\\>

<! see children.stg !>
<type.childrens:children_declaration(); separator = "\n"><\\>

<! see subcomp.stg !>
<subcomponents(type)><\\>

<! see parameters.stg !>
<type.parameters:parameter_accessors(); separator = "\n\n"><\\>

<! see child.stg !>
<type.children:child_accessors(); separator = "\n\n"><\\>

<! see children.stg !>
<type.childrens:children_accessors(); separator = "\n"><\\>

<! see references.stg !>
<type.componentReferences:reference_accessors(); separator = "\n"><\\>


}

//----------------------------------------//
>>






