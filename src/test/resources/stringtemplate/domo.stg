domo(lems, ml_name) ::= <<

//Test domain model generation from <lems.definedIn>
//----------------------------------------//
<lems.componentTypes:class_file(); separator="\n">
>>
pkg_name() ::= "org.<ml_name>.model"
pkg() ::= "package <pkg_name()>"

class_file(type) ::= <<
<pkg()>

<imports(type)>
<class(type)>
>>

imports(type) ::= <<
import javax.xml.bind.annotation.XmlType;
<if(!type.extends)>import <lems_comp()><\n><endif>
>>

class(type) ::= <<
@XmlType
class <type.name> <type:extension()> {

<type.children:children(); separator = "\n\n">
<type.parameters:accessors(); separator = "\n\n">
}

//----------------------------------------//
>>



lems_comp() ::= "org.lemsml.model.Component"
quali_name() ::= "<pkg_name()>.<type.extends>"

extension(type) ::= "extends <if_extends(type.extends, \"Component\")>"

if_extends(if_true, if_false) ::= "<if(type.extends)><if_true><else><if_false><endif>"

children(child) ::= <<
	private List\<<child.type>\> <child.name; format="cap">s;
>>


accessors(prop) ::= <<
<prop:getter()>

<prop:setter()>
>>


setter(prop) ::= <<
	public void set<prop.name; format="cap">(String val) {
		withParameterValue("<prop.name>", val);
	}
>>

getter(prop) ::= <<
	public String get<prop.name; format="cap">() {
		return getParameterValue("<prop.name>");
	}
>>

